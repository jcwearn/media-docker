version: "3"
services:

  ## Media Interfaces
  # Plex Server
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex
    volumes:
      - ${BASE_DIR}/plex/config:/config
      - ${MEDIA_DIR}/TV:/data/tv
      - ${MEDIA_DIR}/Movies:/data/movies
      - ${MEDIA_DIR}/Music:/data/music
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=plex
      - traefik.frontend.rule=Host:plex.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=32400
    networks:
      - internal
      - proxied
    ports:
      - 32400:32400
      - 32400:32400/udp
      - 32469:32469
      - 32469:32469/udp
      - 3005:3005
      - 8324:8324
      - 1900:1900/udp
      - 5353:5353/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: always

  ## /Media Interfaces

  ## Searchers
  # Sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ${BASE_DIR}/sonarr/config:/config
      - ${MEDIA_DIR}/TV:/tv
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=sonarr
      - traefik.frontend.rule=Host:sonarr.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8989
    networks:
      - internal
      - proxied
    expose:
      - 8989
    restart: always

  # Radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${BASE_DIR}/radarr/config:/config
      - ${MEDIA_DIR}/Movies:/movies
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=radarr
      - traefik.frontend.rule=Host:radarr.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=7878
    networks:
      - internal
      - proxied
    expose:
      - 7878
    restart: always

  ## /Searchers

  ## Helper Apps
  # replace with https://github.com/causefx/Organizr
  # Heimdall
  # heimdall:
  #   image: linuxserver/heimdall:latest
  #   container_name: heimdall
  #   volumes:
  #     - ${BASE_DIR}/heimdall/config:/config
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TIMEZONE}
  #   labels:
  #     - traefik.backend=heimdall
  #     - traefik.frontend.rule=Host:heimdall.${DOMAIN}
  #     - traefik.docker.network=proxied
  #   networks:
  #     - internal
  #     - proxied
  #   expose:
  #     - 80
  #     - 443
  #   restart: always

  # Tautulli
  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    volumes:
      - ${BASE_DIR}/tautulli/config:/config
      - ${BASE_DIR}/plex/config/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=tautulli
      - traefik.frontend.rule=Host:tautulli.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8181
    networks:
      - proxied
      - internal
    expose:
      - 8181
    depends_on:
      - plex
    restart: always

  # Ombi
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    volumes:
      - ${BASE_DIR}/ombi/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=ombi
      - traefik.frontend.rule=Host:ombi.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=3579
    networks:
      - proxied
      - internal
    expose:
      - 3579
    depends_on:
      - plex
    restart: always
  ## /Helper Apps

  ## Torrenting over VPN
  # Transmission - OpenVPN
  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    volumes:
      - ${BASE_DIR}/transmission:/data
      - ${DOWNLOAD_DIR}/complete:/data/completed
      - ${DOWNLOAD_DIR}/incomplete:/data/incomplete
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - OPENVPN_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - TRANSMISSION_RPC_HOST_WHITELIST=*.${DOMAIN}
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    networks:
      - vpn
    expose:
      - 9091
    ports:
      - 9091:9091
    restart: always

  vpn_proxy:
    image: haugene/transmission-openvpn-proxy:latest
    container_name: vpn_proxy
    depends_on:
      - transmission
    links:
      - transmission:transmission
    labels:
      - traefik.backend=vpn_proxy
      - traefik.frontend.rule=Host:transmission.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8080
    networks:
      - vpn
      - proxied
    expose:
      - 8080
    restart: always
  ## /Torrenting over VPN

  ## Traefik Proxy
  # Traefik
  traefik:
    image: traefik:latest
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BASE_DIR}/traefik/traefik.toml:/traefik.toml
    labels:
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:traefik.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8080
    networks:
      - proxied
      - internal
    ports:
      - 80:80
    expose:
      - 8080
    restart: always
  ## /Traefik Proxy

  ## Watchtower Updater
  watchtower:
    image: v2tec/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command:
      - --cleanup --schedule "0 0 2 * * *"
    networks:
      - proxied
    restart: unless-stopped
  ## /Watchtower Updater

# Networking config
networks:
  vpn:
  internal:
    external: false
  proxied:
    external: true
